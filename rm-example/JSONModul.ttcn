module JSONModul {

	external function enc_JSON(in JSONObject msg) return octetstring
	with
	{
		extension "prototype (convert) encode(JSON)";
		extension "printing(compact)";
		extension "errorbehavior(ALL:ERROR)"
	}

	external function dec_JSON(in octetstring p_stream) return JSONObject
	with
	{
		extension "prototype (convert) decode(JSON)"
		extension "errorbehavior(ALL:ERROR)"
	}
	
	type union JSONObject
	{
	  	// === SINGLE OBJECTS ===
	  	Baseboard Baseboard,
	  	Disk Disk,
	  	FileStore FileStore,
	  	Firmware Firmware,
	  	Hardware Hardware,
	  	Measurement Measurement,
	  	Memory Memory,
	  	Network Network,
	  	OperatingSystem OperatingSystem,
	  	Process Process,
	  	Processor Processor,
	  	SystemModel SystemModel,
	  	System SystemObject,
	  	
	  	// === LISTS OF OBJECTS ===
	  	
	  	record of Baseboard Baseboards,
		record of Disk Disks,
		record of FileStore FileStores,
		record of Firmware Firmwares,
		record of Hardware Hardwares,
		record of Measurement Measurements,
		record of Memory Memories,
		record of Network Networks,
		record of OperatingSystem OperatingSystems,
		record of Process Processes,
		record of Processor Processors,
		record of System SystemObjects,
		record of SystemModel SystemModels,
		
		// === SINGLE VALUES ===
		
		DiskValue diskValue,
		FileStoreValue fileStoreValue,
		MemoryValue memoryValue,
		NetworkValue networkValue,
		ProcessValue processValue,
		ProcessorValue processorValue,
		
		// === LISTS OF VALUES
		
		record of DiskValue diskValues,
		record of FileStoreValue fileStoreValues,
		record of MemoryValue memoryValues,
		record of NetworkValue networkValues,
		record of ProcessValue processValues,
		record of ProcessorValue processorValues,
	  	
	  	// === WRAPPER CLASSES === (only necessary for "less-weight" test execution, optional)
		
		DiskValueWrapperInt diskValueWrappedInt,
		DiskValueWrapperFloat diskValueWrappedFloat,
		FileStoreValueWrapperInt fileStoreValueWrappedInt,
		FileStoreValueWrapperFloat fileStoreValueWrappedFloat,
		MemoryValueWrapperInt memoryValueWrappedInt,
		MemoryValueWrapperFloat memoryValueWrappedFloat,
		NetworkValueWrapperInt networkValueWrappedInt,
		NetworkValueWrapperFloat networkValueWrappedFloat,
		ProcessValueWrapperInt processValueWrappedInt,
		ProcessValueWrapperFloat processValueWrappedFloat,
		ProcessorValueWrapperInt processorValueWrappedInt,
		ProcessorValueWrapperFloat processorValueWrappedFloat
	}
	with 
	{
		variant "JSON: as value"
	}
	
	type record Nullable 
	{
	  
	}
	
	type record Baseboard
	{
	  charstring baseboardManufacturer optional,
      charstring baseboardModel optional,
      charstring baseboardSerialNumber,
      charstring baseboardVersion optional
	}
	
	type record Disk
	{
	  record of FileStore diskFileStores optional,
      charstring diskModel optional,
      charstring diskName optional,
      charstring diskSerialNumber,
      integer diskSize optional
	}
	
	type record Firmware
	{
	  charstring firmwareDescription optional,
      integer firmwareIdentifier,
      charstring firmwareManufacturer optional,
      charstring firmwareName optional,
      charstring firmwareReleaseDate optional,
      charstring firmwareVersion optional
	}
	
	type record FileStore
	{
	  charstring fileStoreDescription optional,
      charstring fileStoreFsType optional,
      charstring fileStoreMountPoint optional,
      charstring fileStoreName optional,
      integer fileStoreTotalSpace optional,
      charstring fileStoreUuid,
      charstring fileStoreVolume optional
	}
	
	type record Hardware
	{
	  Baseboard hardwareBaseboard optional,
      record of Disk hardwareDisks optional,
      Firmware hardwareFirmware optional,
      integer hardwareId,
      Memory hardwareMemory optional,
      record of Network hardwareNetworks optional,
      Processor hardwareProcessor optional,
      SystemModel hardwareSystemModel optional
	}
	
	type record Measurement
	{
      charstring measurementEndDate optional,
      integer measurementId,
      charstring measurementIp optional,
      charstring measurementRate optional,
      charstring measurementRemotePort optional,
      boolean measurementRunning optional,
      charstring measurementStartDate optional
	}
	
	type record Memory
	{
	  integer memoryTotalSpace
	}
	
	type record Network
	{
	  charstring networkDisplayName optional,
      charstring networkIpv4 optional,
      charstring networkIpv6 optional,
      charstring networkMac,
      integer networkMtu optional,
      charstring networkName optional,
      integer networkSpeed optional
	}
	
	type record OperatingSystem
	{
	  charstring operatingSystemBuild optional,
      charstring operatingSystemCodeName optional,
      charstring operatingSystemFamily optional,
      integer operatingSystemId,
      charstring operatingSystemManufacturer optional,
      charstring operatingSystemVersion optional
	}
	
	type record Process
	{
	  integer processId,
      charstring processName optional,
      integer processPid optional
	}
	
	type record Processor
	{
	  boolean processorCpu64bit optional,
      charstring  processorFamily optional,
      charstring  processorId,
      integer  processorLogicalProcessorCount optional,
      charstring  processorModel optional,
      charstring  processorName optional,
      integer  processorPhysicalPackageCount optional,
      integer  processorPhysicalProcessorCount optional,
      charstring  processorStepping optional,
      charstring  processorVendor optional,
      integer  processorVendorFreq optional
	}
	
	type record System
	{
	  Hardware systemHardware,
      charstring systemHostName,
      integer systemIdentifier,
      OperatingSystem systemOperatingSystem
	}
	
	type record SystemModel
	{
	  charstring systemModelManufacturer optional,
      charstring systemModelModel optional,
      charstring systemModelSerialNumber
	}
	
	
	
	/*
		== VALUE CLASSES ==
	*/

	type record DiskValue
	{
	  DiskValuePK diskValueId,
      integer diskValueReadBytes optional,
      integer diskValueReads optional,
      integer diskValueTransferTime optional,
      integer diskValueWriteBytes optional,
      integer diskValueWrites optional
	}
	
	type record FileStoreValue
	{
  	   FileStoreValuePK fileStoreValueId,
  	   integer fileStoreValueUsableSpace optional
	}
	
	type record MemoryValue
	{
	  integer memoryValueAvailable optional,
      MemoryValuePK memoryValueId,
      integer memoryValueSwapTotal optional,
      integer memoryValueSwapUsed optional
	}
	
	type record NetworkValue
	{
	  integer networkValueBytesRecv optional,
      integer networkValueBytesSent optional,
      NetworkValuePK networkValueId,
      integer networkValueInErrors optional,
      integer networkValueOutErrors optional,
      integer networkValuePacketsRecv optional,
      integer networkValuePacketsSent optional
	}
		
	type record ProcessValue
	{
	  integer processValueThreadCount optional,
	  ProcessValuePK processValueId,
	  integer processValuePriority optional,
	  integer processValueVirtualSize optional,
	  integer processValueResidentSetSize optional,
	  integer processValueKernelTime optional,
	  integer processValueUserTime optional,
	  integer processValueUpTime optional,
	  integer processValueStartTime optional,
	  integer processValueBytesRead optional,
      integer processValueBytesWritten optional,
      integer processValueHandles optional   
	}
	
	type record ProcessorValue
	{
	  integer processorValueContextSwitches optional,
      ProcessorValuePK processorValueId,
      integer processorValueInterrupts optional,
      record of float processorValueProcessorCpuLoadBetweenTicks optional,
      record of record of integer processorValueProcessorCpuLoadTicks optional,
      float processorValueSystemCpuLoad optional,
      float processorValueSystemCpuLoadBetweenTicks optional,
      record of integer processorValueSystemCpuLoadTicks optional,
      record of integer processorValueSystemLoadAverages optional,
      integer processorValueSystemUpTime optional
	}
	
	/*
		== VALUE WRAPPER CLASSES ==
	*/

	type record DiskValueWrapperInt
	{
	  integer diskValueReadBytes optional,
      integer diskValueReads optional,
      integer diskValueTransferTime optional,
      integer diskValueWriteBytes optional,
      integer diskValueWrites optional
	}
	
	type record DiskValueWrapperFloat
	{
	  float diskValueReadBytes optional,
      float diskValueReads optional,
      float diskValueTransferTime optional,
      float diskValueWriteBytes optional,
      float diskValueWrites optional
	}

	type record FileStoreValueWrapperInt
	{
	  integer fileStoreValueUsableSpace optional
	}
	
	type record FileStoreValueWrapperFloat
	{
	  float fileStoreValueUsableSpace optional
	}

	type record MemoryValueWrapperInt
	{
	  integer memoryValueAvailable optional,
      integer memoryValueSwapTotal optional,
      integer memoryValueSwapUsed optional
	}
	type record MemoryValueWrapperFloat
	{
	  float memoryValueAvailable optional,
      float memoryValueSwapTotal optional,
      float memoryValueSwapUsed optional
	}

	type record NetworkValueWrapperInt
	{
	  integer networkValueBytesRecv optional,
      integer networkValueBytesSent optional,
      integer networkValueInErrors optional,
      integer networkValueOutErrors optional,
      integer networkValuePacketsRecv optional,
      integer networkValuePacketsSent optional
	}
	
	type record NetworkValueWrapperFloat
	{
	  float networkValueBytesRecv optional,
      float networkValueBytesSent optional,
      float networkValueInErrors optional,
      float networkValueOutErrors optional,
      float networkValuePacketsRecv optional,
      float networkValuePacketsSent optional
	}
	
	type record ProcessorValueWrapperInt
	{
	  integer processorValueContextSwitches optional,
      integer processorValueInterrupts optional,
      integer processorValueSystemCpuLoad optional,
      integer processorValueSystemCpuLoadBetweenTicks optional,
      integer processorValueSystemUpTime optional
	}
	
	type record ProcessorValueWrapperFloat
	{
	  float processorValueContextSwitches optional,
      float processorValueInterrupts optional,
      float processorValueSystemCpuLoad optional,
      float processorValueSystemCpuLoadBetweenTicks optional,
      float processorValueSystemUpTime optional
	}
	
	type record ProcessValueWrapperInt
	{
	  integer processValueBytesRead optional,
      integer processValueBytesWritten optional,
      integer processValueHandles optional,
      integer processValueKernelTime optional,
      integer processValuePriority optional,
      integer processValueResidentSetSize optional,
      integer processValueStartTime optional,
      integer processValueThreadCount optional,
      integer processValueUpTime optional,
      integer processValueUserTime optional,
      integer processValueVirtualSize optional
	}
	
	type record ProcessValueWrapperFloat
	{
	  float processValueBytesRead optional,
      float processValueBytesWritten optional,
      float processValueHandles optional,
      float processValueKernelTime optional,
      float processValuePriority optional,
      float processValueResidentSetSize optional,
      float processValueStartTime optional,
      float processValueThreadCount optional,
      float processValueUpTime optional,
      float processValueUserTime optional,
      float processValueVirtualSize optional
	}

	/*
		== PRIMARY KEY CLASSES ==
	*/
	
	type record MemoryValuePK {
	  integer memoryValueMeasurementId,
	  charstring memoryValueTimestamp
	}
	
	type record ProcessValuePK {
	  integer processValueMeasurementId,
	  charstring processValueTimestamp
	}
	
	type record ProcessorValuePK {
	  integer processorValueMeasurementId,
	  charstring processorValueTimestamp
	}
	
	type record NetworkValuePK {
	  integer networkValueMeasurementId,
	  charstring networkValueTimestamp
	}
	
	type record FileStoreValuePK{
	  integer fileStoreValueMeasurementId,
	  charstring fileStoreValueTimestamp 
	}
	
	type record DiskValuePK{
	  integer diskValueMeasurementId,
	  charstring diskValueTimestamp
	}
}
with 
{
	encode "JSON";
}

