package de.tub.qds.rm.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import de.tub.qds.rm.models.consts.Network;
import de.tub.qds.rm.models.consts.repos.NetworkRepo;

@RestController
public class NetworkController {
	
	@Autowired
	NetworkRepo repo;

	@RequestMapping(method = RequestMethod.GET, path = "/network", produces = "application/json")
	public List<Network> getNetworks() {
		return repo.findAll();
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/network/{networkMac}", produces = "application/json")
	public Network getNetworkByNetworkMac(@PathVariable("networkMac") String networkMac) {
		return repo.existsById(networkMac) ? repo.findById(networkMac).get() : null;
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/network/{networkMac}/networkName", produces = "application/json")
	public String getNetworkByNetworkMacName(@PathVariable("networkMac") String networkMac) {
		return repo.existsById(networkMac) ? repo.findById(networkMac).get().getNetworkName() : null;
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/network/{networkMac}/networkDisplayName", produces = "application/json")
	public String getNetworkByNetworkMacDisplayName(@PathVariable("networkMac") String networkMac) {
		return repo.existsById(networkMac) ? repo.findById(networkMac).get().getNetworkDisplayName() : null;
	}

}
