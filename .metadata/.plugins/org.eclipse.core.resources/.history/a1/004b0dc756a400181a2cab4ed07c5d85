package de.tub.qds.rm.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import de.tub.qds.rm.models.consts.Firmware;
import de.tub.qds.rm.models.consts.repos.FirmwareRepo;

@RestController
public class FirmwareController {
	
	@Autowired
	FirmwareRepo repo;

	@RequestMapping(method = RequestMethod.GET, path = "/firmware", produces = "application/json")
	public List<Firmware> getFileStores() {
		return repo.findAll();
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/firmware/{firmwareIdentifier}", produces = "application/json")
	public Firmware getFirmwareByIdFirmwareIdentifier(@PathVariable("firmwareIdentifier") int firmwareIdentifier) {
		return repo.existsByIdFirmwareIdentifier(firmwareIdentifier) ? repo.findByIdFirmwareIdentifier(firmwareIdentifier) : null;
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/firmware/{firmwareIdentifier}/manufacturer", produces = "application/json")
	public String getFirmwareByIdFirmwareIdentifierManufacturer(@PathVariable("firmwareIdentifier") int firmwareIdentifier) {
		return repo.existsByIdFirmwareIdentifier(firmwareIdentifier) ? repo.findByIdFirmwareIdentifier(firmwareIdentifier).getFirmwareId().getFirmwareManufacturer() : null;
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/firmware/{firmwareIdentifier}/name", produces = "application/json")
	public String getFirmwareByIdFirmwareIdentifierName(@PathVariable("firmwareIdentifier") int firmwareIdentifier) {
		return repo.existsByIdFirmwareIdentifier(firmwareIdentifier) ? repo.findByIdFirmwareIdentifier(firmwareIdentifier).getFirmwareId().getFirmwareName() : null;
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/firmware/{firmwareIdentifier}/description", produces = "application/json")
	public String getFirmwareByIdFirmwareIdentifierDescription(@PathVariable("firmwareIdentifier") int firmwareIdentifier) {
		return repo.existsByIdFirmwareIdentifier(firmwareIdentifier) ? repo.findByIdFirmwareIdentifier(firmwareIdentifier).getFirmwareId().getFirmwareDescription() : null;
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/firmware/{firmwareIdentifier}/version", produces = "application/json")
	public String getFirmwareByIdFirmwareIdentifierVersion(@PathVariable("firmwareIdentifier") int firmwareIdentifier) {
		return repo.existsByIdFirmwareIdentifier(firmwareIdentifier) ? repo.findByIdFirmwareIdentifier(firmwareIdentifier).getFirmwareId().getFirmwareVersion() : null;
	}
	
	@RequestMapping(method = RequestMethod.GET, path = "/firmware/{firmwareIdentifier}/releaseDate", produces = "application/json")
	public String getFirmwareByIdFirmwareIdentifierReleaseDate(@PathVariable("firmwareIdentifier") int firmwareIdentifier) {
		return repo.existsByIdFirmwareIdentifier(firmwareIdentifier) ? repo.findByIdFirmwareIdentifier(firmwareIdentifier).getFirmwareId().getFirmwareReleaseDate() : null;
	}

}
